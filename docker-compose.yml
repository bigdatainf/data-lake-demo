version: '3'

services:
  # MinIO - S3 Compatible Object Storage (Storage Layer)
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create initial buckets in MinIO
  mc-init:
    image: minio/mc
    depends_on:
      - minio
    restart: on-failure
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin; do
        echo 'Waiting for MinIO to be ready...'
        sleep 1
      done;
      /usr/bin/mc mb minio/raw-zone || true;
      /usr/bin/mc mb minio/trusted-zone || true;
      /usr/bin/mc mb minio/refined-zone || true;
      /usr/bin/mc mb minio/consumption-zone || true;
      echo 'MinIO buckets created successfully'
      exit 0;
      "

  # Trino (formerly PrestoSQL) - SQL Query Engine
  trino:
    image: trinodb/trino:403
    container_name: trino
    ports:
      - "8085:8080"
    volumes:
      - ./config/trino/:/etc/trino/
    depends_on:
      - minio

  python-client:
    image: python:3.9-slim
    container_name: python-client
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    working_dir: /scripts
    command: >
      bash -c "
      apt-get update && 
      apt-get install -y procps gcc g++ make curl liblz4-dev &&
      apt-get clean &&
      pip install minio pandas pyarrow>=7.0.0 requests trino &&
      echo 'Python client is ready. Use docker exec -it python-client python /scripts/01_ingest_data.py to run scripts.' &&
      tail -f /dev/null
      "
    depends_on:
      - trino
      - minio

volumes:
  minio_data: